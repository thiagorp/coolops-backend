apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    run: background-job-runner
  name: background-job-runner
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      run: background-job-runner
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: background-job-runner
    spec:
      containers:
      - args:
        - ./background-job-runner
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              key: DATABASE_URL
              name: api-secrets
        - name: SLACK_VERIFICATION_TOKEN
          valueFrom:
            secretKeyRef:
              key: SLACK_VERIFICATION_TOKEN
              name: api-secrets
        - name: SLACK_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: SLACK_CLIENT_ID
              name: api-secrets
        - name: SLACK_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: SLACK_CLIENT_SECRET
              name: api-secrets
        - name: K8S_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: deployment-runner-token-72n2r
        - name: K8S_NAMESPACE
          value: production-deployment-jobs
        image: gcr.io/fluent-cosine-206514/coolops-api:background-jobs-4643859e4030d00085a9931060b1bcb0a14f0e38
        imagePullPolicy: IfNotPresent
        name: background-job-runner
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - /cloud_sql_proxy
        - -instances=fluent-cosine-206514:us-central1:production-1=tcp:5432
        - -credential_file=/secrets/cloudsql/credentials.json
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        imagePullPolicy: IfNotPresent
        name: cloudsql-proxy
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /secrets/cloudsql
          name: cloudsql-instance-credentials
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          defaultMode: 420
          secretName: cloudsql-instance-credentials
status: {}
